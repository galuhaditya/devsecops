name: CI/CD DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/devsecops

jobs:
  test_py:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run Pytest
        run: pytest

  sast_py:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install Bandit
        run: pip install bandit
      - name: Run Bandit
        run: bandit -r . -f json -o bandit-report.json
      - name: Upload Bandit report
        uses: actions/upload-artifact@v4 # <-- Corrected to v4
        with:
          name: bandit-report
          path: bandit-report.json

  sca_py:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install pip-audit
        run: pip install pip-audit
      - name: Install dependencies (jika ada)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run pip-audit
        run: pip-audit

  secret_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Gitleaks butuh history lengkap
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          report_format: json
          report_path: gitleaks-report.json
      - name: Upload Gitleaks report
        uses: actions/upload-artifact@v4 # <-- Corrected to v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json

  build_and_push:
    runs-on: ubuntu-latest
    needs:
      - test_py
      - sast_py
      - sca_py
      - secret_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set commit SHA
        run: echo "COMMIT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.COMMIT_SHA }}

  image_scan:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ env.DOCKER_IMAGE_NAME }}:latest'
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'
